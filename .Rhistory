pwd
ls
getwd
getwd()
con <- file("hw1_data.csv","r")
data <- read.csv(con)
data
x<-readLines(con,2)
x
data
data[2,]
data[1:2,]
nrows(data)
nrow(data)
data[nrow(data)-2:nrow(data),]
data
data[nrow(data)-2,]
data
data[nrow(data)-2 : nrow(data),]
a <- nrow(data)
a
b <- nrow(data)-2
b
data[b:a,]
data[nrow(data)-1 : nrow(data) ,]
data[b+1:a,]
b <- b+1
b
data[b:a,]
data[47,]
nrow(data[Ozone==NA,])
nrow(data[[Ozone==NA,]])
data[["Ozone"]]
nrow(data)
nrow(data[["Ozone"==NA]])
nrow(data[["Ozone"=="NA"]])
data[["Ozone"==NA]]
data[["Ozone"=="NA"]]
data[Ozone]
data["Ozone"]
data["Ozone"==Na]
data["Ozone"==NA]
data["Ozone"=="NA"]
data["Ozone"==NA]
data["Ozone"]==NA
data["Ozone"]
is.na(data)
is.na(data["Ozone"])
data[!is.na(data["Ozone"])]
nrow(data[!is.na(data["Ozone"])])
temp <- data[!is.na(data["Ozone"])]
temp
nrow(temo)
nrow(temp)
data
temp <- data["Ozone"]
temp
is.na(temp)
temp[!is.na(temp),]
temp[!is.na(temp)]
temp
nrow(temp)
nrow(is.na(temp))
temp["Ozone"==NA]
complete.cases(temp)
dim(temp)
temp[!is.na(temp)]
temp<-temp[!is.na(temp)]
temp
nrow(temp)
ncol(temp)
class(temp)
temp<-data["Ozone"]
class(temp)
temp
nrow(temp)
complete.cases(temp)
case <- c(complete.cases(temp),1)
case
temp
dim(temp)
temp2 <- temp[!is.na(temp2)]
temp2 <- temp[!is.na(temp)]
temp2
dim(temp)
dim(!is.na(temp)) <- c(dim(temp),1)
dim(!is.na(temp))
temp2
dim(temp2)
dim(temp(!is.na(temp))) <- c(dim(temp),1)
dim(temp) <- c(dim(temp),1)
dim(temp2) <- c(dim(temp),1)
dim(temp2)
temp2
temp3 <- matrix(temp2,nrow = dim(temp),ncol=1)
temp3 <- matrix(temp2)
temp3
dim(temp3)
dim(temp)-dim(temp3)
mean(temp2)
data
data["Ozone">31]
data["Ozone">31,]
data["Ozone"]
data["Ozone">31 && "Temp">90]
data[data["Ozone"]>31 && data["Temp"]>90]
data[data["Ozone"]]
data[data["Ozone"]>31]
data[data["Ozone"]==NA] <- 0
data[data["Ozone"] == "NA""] <- 0
0
ad
da
quit()
return(null)
data
data[["Ozone"]]
data[data[["Ozone"]] == "NA"] <- 0
data[data[["Ozone"]] == NA] <- 0
complete.cases(data)
data[complete.cases(data), ]
nrow(data[complete.cases(data), ])
nrow(data)-nrow(data[complete.cases(data), ])
nrow(data["Ozone"])-nrow(data["Ozone"][complete.cases(data["Ozone"]), ])
temp <- data[complete.cases(data), ]
temp
temp[temp["Ozone"]]
temp[temp["Ozone"] > 31]
temp["Ozone"]>31
temp["Ozone"]>31 && temp["Temp"]>90
c(temp["Ozone"]>31 , temp["Temp"]>90)
temp2 <- c(temp["Ozone"]>31 , temp["Temp"]>90)
dim(temp)
dim(temp) <- c(temp["Ozone"]>31 , temp["Temp"]>90)
temp2
dim(temp2)
temp(!temp2)
temp
temp[!temp2]
temp[!temp2, ]
temp[!temp2]
temp[!temp2]
temp
temp[temp["Ozone"]>31]
temp[temp["Ozone"] > 31]
temp[temp["Ozone"] > 31, ]
temp[temp["Ozone"] > 31 && temp["Temp"] > 90, ]
temp[temp["Ozone"] > 31 & temp["Temp"] > 90, ]
temp <- temp[temp["Ozone"] > 31 & temp["Temp"] > 90, ]
temp
mean(temp["Solar.R"])
temp["Solar.R"]
temp<-temp["Solar.R"]
temp
mean(temp)
dim(temp)
mean(temp["Solar.R", ])
mean(temp[1:dim(temp), ])
mean(temp[1:dim(temp)])
mean(temp[1:dim(temp), 1])
data[data["Month"]==6, ]
temp <- data[data["Month"]==6, ]
temp
temp
temp<- temp["Temp"]
temp
mean(temp)
mean(temp,)
mean(:,1)
mean(1:dim(temp),1)
temp
mean(temp[["Temp"]])
data[data["Month"]==5, ]
temp<-data[data["Month"]==5, ]
temp
temp <- complete.cases(temp["Month"]==5, ])
temp <- complete.cases(temp[temp["Month"]==5, ])
temp
temp <- data[complete.cases(data[data["Month"]==5], ), ]
data[complete.cases(data), ]
data[complete.cases(data["Month"]), ]
data <- data[complete.cases(data), ]
data
data <- data[data["Month"] == 5, ]
data
max(data[["Ozone"]])
install.packages("swirl")
package_version("swirl")
packageVersion("swirl")
library(swirl)
swirl()
5 + 7
x <- 5 +7
x
y <- x-3
y
z<-c(1.1, 9 ,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+100
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files)
old.dir <- getwd()
testdir <- dir.create()
dir.create(testdir)
dir.create()
?dir.create
testdir <- dir.create(old.dir)
dir.create("testdir")
?setwd
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
list()
list.files()
file.exists("mytest.R")
file.info()
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path(folder1,folder2)
file.path('folder1','folder2')
?dir.create
dir.create("testdir2",recursive = TRUE)
dir.create(file.path"testdir2",recursive = TRUE)
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
setwd(old.dir)
exit()
quit
quit()
load(swirl)
load("swirl")
packageVersion("swirl")
start()
library("swirl")
swirl()
1:20
pi:10
15:1
?:
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length()
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each = 10)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect(num_vect<1)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Sifat")
my_name
paste(my_name, collapse = " ")
paste("Hello", "World!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3,c("X","Y","Z"),sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44, NA, 5, NA)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) > x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,nrow = 4,ncol = 5)
my_matrix2
?identical
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
data.frame(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class
class(my_data)
patients
cname
canmes <- c(patients,"age","weight","bp","rating","test")
canmes <- c("patients","age","weight","bp","rating","test")
cnames <- data.frame(patients,c("age","weight","bp","rating","test"))
info()
cnames <- c("patient", "age", "weight", "bp","rating", "test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
clear
clear()
for (i in  1:4) {
print(x[i])
}
ls()
rm(list=ls())
for (i in  1:4) {
print(x[i])
}
x <- c("a","b","c","d")
print(x[i])
print(x[i])
for (i in  1:4) {
print(x[i])
}
print(x[i])
for (i in  1:4) {
print(x[i])
}
x <- c("a","b","c","d")
for (i in  1:4) {
print(x[i])
}
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
source('~/Personal Work/Data Science/First Project/mycodeR.R')
source('~/Personal Work/Data Science/First Project/mycodeR.R')
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
x <- c("a","b","c","d")
for (i in  1:4) {
print(x[i])
}
x <- matrix(1:6,2,3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- c("a","b","c","d")
for (i in  1:4) {
print(x[i])
}
x <- matrix(1:6, 2, 3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, 2, 3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- c("a","b","c","d")
for (i in  1:4) {
print(x[i])
}
x <- matrix(1:6, nrow=2, ncol=3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, nrow=2, ncol=3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, nrow=2, ncol=3)
print(x)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, nrow=2, ncol=3)
x
x <- matrix(1:6, nrow=2, ncol=3)
x
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, nrow=2, ncol=3)
x
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
i
j
print(x[i, j])
}
}
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
source('~/Personal Work/Data Science/First Project/mycodeR.R', echo=TRUE)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
print(x[i, j])
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, nrow=2, ncol=3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
x <- matrix(1:6, nrow=2, ncol=3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
print(x[2,1])
x <- matrix(1:6, nrow=2, ncol=3)
for(i in seq_along(nrow(x))) {
for (j in seq_along(ncol(x))) {
print(x[i, j])
}
}
print(x[2,1])
count <- 0
while(count < 10 ) {
print(count)
count <- count + 1
}
z <- 5
while (z >= 3 && z <= 10) {
print(z)
coin <- rbinom(1, 1, 0.5)
if(coin == 1) {
z <- z+1
}
else {
z <- z -1
}
}
?rbinom
y <- 10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
